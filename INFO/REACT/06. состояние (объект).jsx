// TODO –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è state —Ä–∞–Ω—å—à–µ –±—ã–ª –Ω—É–∂–µ–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
class App extends Component() {
  constructor() {
    super();
    this.state = {}; // —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç—Ç–æ –æ–±—ä–µ–∫—Ç
    // —Å–æ–∑–¥–∞–≤–∞—è –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å setState()‚Äã, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω—É–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å —Å‚Äã this.
    this.handleClick = this.handleClick.bind(this)
  }
  handleClick() {
    this.setState({count: 1})
  }
  render() {}
}
export default App;

// TODO —Å–µ–π—á–∞—Å –º–æ–∂–Ω–æ —Ç–∞–∫
class App extends Component() {
  state = {theme: "—Å–≤–µ—Ç–ª–∞—è"}
  render() {}
}

// 1. –ï—Å–ª–∏ –Ω–∞—Å –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–æ, –∫–∞–∫–∏–º –±—ã–ª–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞,
// —Ç–æ —ç—Ç–æ–º—É –º–µ—Ç–æ–¥—É –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ

// 2. –í —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω—É–∂–Ω–æ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ —Ç–æ–≥–æ, —á—Ç–æ –≤ –Ω—ë–º —Ö—Ä–∞–Ω–∏–ª–æ—Å—å —Ä–∞–Ω–µ–µ,
// –º–µ—Ç–æ–¥—É setState()‚Äã–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è, –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è.
// –ù–∞–∑–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –º–æ–∂–Ω–æ –∫–∞–∫ —É–≥–æ–¥–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä‚Äã prevState.
// –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è
// –ó–∞–≥–æ—Ç–æ–≤–∫–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
function handleClick() {
  this.setState(prevState => {
    return {
      count: prevState.count + 1
    }
  })
}

// TODO state
class ThemeToggle extends React.Component {
  state = { theme: "—Å–≤–µ—Ç–ª–∞—è" };
  render() {
    return (
      <div className={this.state.theme === "—Å–≤–µ—Ç–ª–∞—è" ? "th-light" : "th-dark"}>
        <p>–í–∫–ª—é—á–µ–Ω–∞ {this.state.theme} —Ç–µ–º–∞</p>
      </div>
    );
  }
}

// TODO —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ setState()
class ThemeToggle extends React.Component {

  state = { theme: "—Å–≤–µ—Ç–ª–∞—è" };

  toggleTheme = () => {
    this.setState({
      theme: this.state.theme === "—Å–≤–µ—Ç–ª–∞—è" ? "—Ç—ë–º–Ω–∞—è" : "—Å–≤–µ—Ç–ª–∞—è"
    });
  };

  render() {
    return (
      <div className={this.state.theme === "—Å–≤–µ—Ç–ª–∞—è" ? "th-light" : "th-dark"}>
        <p>–í–∫–ª—é—á–µ–Ω–∞ {this.state.theme} —Ç–µ–º–∞</p>
        <button onClick={this.toggleTheme}>
          {this.state.theme === "—Å–≤–µ—Ç–ª–∞—è" ? "üåö" : "üåû"}
        </button>
      </div>
    );
  }
}

// TODO –∞—Ä–≥—É–º–µ–Ω—Ç—ã setState
// –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ this.setState –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–∏–±–æ —Ñ—É–Ω–∫—Ü–∏—é, –ª–∏–±–æ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:
this.setState(function(prevState, props){
  return { showForm: !prevState.showForm }
});
// –ª–∏–±–æ
this.setState({ showForm: !this.state.showForm });

// –£ setState –µ—Å—Ç—å –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç, –Ω–æ –æ–Ω –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π. –í –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—é. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –í—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –º–µ—Ç–æ–¥–∞ setState —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ —Å–ª–æ–∂–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö:
this.setState(
  { showForm: !this.state.showForm },
  () => {
    this.myCustomLogger("–°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å!")
  }
);

// TODO —Ç–æ—á–µ—á–Ω–æ –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ
class SettingsMenu extends React.Component {
  state = {
    theme: 'dark',
    userSettings: {
      notificationsEnabled: true,
      sidebar: {
        title: '–ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å',
        enabled: false
      }
    }
  };

  toggleSidebar = () => {
    this.setState(prevState => ({
      ...prevState,
      userSettings: {
        ...prevState.userSettings,
        sidebar: {
          ...prevState.sidebar,
          enabled: !this.state.userSettings.sidebar.enabled
        }
      }
    }));
  };

  render() {
    const { enabled } = this.state.userSettings.sidebar;
    return (
      <>
        {enabled && <aside className="aside" />}
        <section className="content">
          <button className="content__button" onClick={this.toggleSidebar}>
            {enabled ? '–í—ã–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
          </button>
        </section>
      </>
    );
  }
}

ReactDOM.render(<SettingsMenu />, document.querySelector('#root'));



