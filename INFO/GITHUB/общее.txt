1. рабочий каталог (где вы работаете)
 - working directory

2. git add <working directory>
добавляет рабочий каталог (working directory) в
раздел проиндексированных файлов (staging area)
Команда git add добавляет файлы во «временное хранилище», его ещё называют index, или staged.

• изменённые файлы, modified — это файлы, которые вы добавили командой git add, но после добавления изменили;
• не отслеживаемые, untracked — это новые файлы, вы их ещё не добавляли командой git add.

Для «Гит» пустая папка — это отсутствующая папка
Если добавить в проект пустую директорию, «Гит» её не увидит.
Чтобы добавить пустую папку в коммит, создайте в ней пустой файл с именем .gitkeep.





git init
  # инициализировать репозиторий

git add
  # добавить файл или директорию для индексирования, используется как отдельная команда, переносит ожидающие изменения из рабочего каталога в раздел проиндексированных файлов.

git add .
  # добавить все файлы для индексирования

git add -A
  # добавить все файлы для индексирования

git add -P
  # начать интерактивный сеанс индексирования, во время которого вы сможете выбрать части файла, которые будут добавлены в следующий коммит. Команда представит фрагмент изменений и предложит вам ввести команду. Введите y, чтобы проиндексировать фрагмент; n, чтобы игнорировать фрагмент; s, чтобы разбить его на более мелкие фрагменты; e, чтобы вручную отредактировать фрагмент; q, чтобы завершить работу с командой.

git status
  # проверяет текущее состояние репозитория. Выводит информацию обо всех изменениях, внесенных в дерево директорий проекта по сравнению с последним коммитом рабочей ветки; отдельно выводятся внесенные в индекс и неиндексированные файлы, файлы с неразрешенными конфликтами слияния, файлы, игнорируемые git

git status -sb
  # краткая версия информации

git commit
  # создать коммит проиндексированного состояния кода, откроет текстовый редактор с предложением ввести комментарий к коммиту.

git commit --amend
  # изменить последний коммит, проиндексированные изменения будут добавлены в предыдущий коммит, откроет текстовый редактор с предложением изменить указанный ранее комментарий к коммиту, предыдущий коммит не останется в текущей ветке.

git commit -m "commit message"
  # быстрое создание коммита с указанным комментарием, при передаче параметра -m текстовый редактор не открывается

git commit -a
  # создать коммит с автоматической индексацией, включает только изменения отслеживаемых файлов, новые файлы при этом индексироваться не будут

git push origin master
  # запушить на сервер, origin - сервер, master - ветка

git checkout ******
  # переключение на ветку

git checkout -b ******
  # создание ветки и переключение не нее