// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
// 15	унарный плюс	        +
// 15	унарный минус	        -
// 14	возведение в степень	**
// 13	умножение	            *
// 13	деление	              /
// 13 остаток от деления    %
// 12	сложение	            +
// 12	вычитание	            -
// 2	присваивание	        = или += -=
// 1  запятая               ,

// Операнд – то, к чему применяется оператор.
// Например, в умножении 5 * 2 есть два операнда: левый операнд равен 5, а правый операнд равен 2.
// Иногда их называют «аргументами» вместо «операндов».

// Унарным называется оператор, который применяется к одному операнду.
// Например, оператор унарный минус "-" меняет знак числа на противоположный:

// Бинарным называется оператор, который применяется к двум операндам.

// Сокращённая арифметика с присваиванием
// +=
// *=
// /=
// -=

// Вызов с присваиванием имеет в точности такой же приоритет, как обычное присваивание, то есть выполнится после большинства других операций:
let n = 2;
n *= 3 + 5;
alert( n ); // 16  (сначала выполнится правая часть, выражение идентично n *= 8)

// Инкремент ++ увеличивает переменную на 1
// Декремент -- уменьшает переменную на 1


// Сложение строк
// Если хотя бы один операнд является строкой, то второй будет также преобразован в строку.
// Сложение и преобразование строк — это особенность бинарного плюса +.
// Другие арифметические операторы работают только с числами и всегда преобразуют операнды в числа.
// пустая строка "" приводится к 0.


"" + 1 + 0    // "10"
"" - 1 + 0    // -1
true + false  // 1
6 / "3"       // 2
"2" * "3"     // 6
4 + 5 + "px"  // "9px"
"$" + 4 + 5   // "&45"
"4" - 2       // 2
"4px" - 2     // NaN
"  -9  " + 5  // "  -9  5"
"  -9  " - 5  // -14
null + 1      // 1
undefined + 1 // NaN
" \t \n" - 2  // -2