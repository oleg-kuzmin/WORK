// TODO Цикл «while»

while (condition) {
  // Код из тела цикла выполняется, пока условие condition истинно.
}

// Фигурные скобки не требуются для тела цикла из одной строки
let i = 3;
while (i) alert(i--);

// TODO Цикл «do…while»
do {
  // тело цикла
} while (condition);

let a = 0;
do {
  alert(a);
  a++;
} while (a < 3);

// TODO Цикл «for»
for (начало; условие; шаг) {
  // ... тело цикла ...
}

for (let i = 0; i < 3; i++) {
  alert(i); // 0, 1, 2
}
alert(i); // ошибка, нет такой переменной

// Пропуск частей «for» (Любая часть for может быть пропущена.)
let b = 0;
for (; b < 3; i++) {
  alert( b ); // мы уже имеем объявленную i с присвоенным значением
}

let c = 0;
for (; c < 3;) {
  alert( c++ ); // Это сделает цикл аналогичным while (i < 3).
}

for (;;) {
  // будет выполняться вечно
}

// TODO Прерывание цикла: «break»
// бесконечный цикл + break
let sum = 0;
while (true) {
  let value = +prompt("Введите число", '');
  if (!value) break; // (*)
  sum += value;
}
alert( 'Сумма: ' + sum );


// TODO Переход к следующей итерации: continue
// Директива continue – «облегчённая версия» break.
// При её выполнении цикл не прерывается, а переходит к следующей итерации (если условие все ещё равно true).
for (let i = 0; i < 10; i++) {
  // если true, пропустить оставшуюся часть тела цикла
  if (i % 2 == 0) continue;
  alert(i); // 1, затем 3, 5, 7, 9
}

// TODO Метки для break/continue
outer: for (let i = 0; i < 3; i++) {
  for (let j = 0; j < 3; j++) {
    let input = prompt(`Значение на координатах (${i},${j})`, '');
    // если пустая строка или Отмена, то выйти из обоих циклов
    if (!input) break outer; // (*)
    // сделать что-нибудь со значениями...
  }
}
alert('Готово!');

