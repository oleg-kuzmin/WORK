1. Скачайте и установите «Гит» на свой компьютер
  https://git-scm.com/download/

Когда запустите установщик, вам предложат использовать GitBash — это ещё одна программа для полноценной работы с «Гитом».
Обязательно поставьте галочку для её установки.
Также поставьте галочку на пункте: «Использовать Git из командной строки» (Use Git from... the Command Prompt).

2. Настройка имени и почты. В Git Bash (терминале) ввести:
  git config --global user.name "Oleg Kuzmin"
  git config --global user.email alex-dust@yandex.ru

3. Проверка глобальных настроек
  git config --list

4. Подключение к проекту
  git init

5. Проверка статуса
  git status

6. Отслеживание файла
  it add index.html  // отслеживание конкретного файла
  git add -A         // отслеживание всех файлов

7. Файлы с кириллицей
необходимо изменить параметр quotepath в секции [core], установив его в false.
  открыть файл \.git\config
  добавить параметр quotepath = false
ИЛИ
  изменить глобальный файл C:\Program Files\Git\etc\gitconfig

8. Сделать коммит
  git commit -m "мой первый коммит"

9. Посмотреть историю коммитов
  git commit -m "мой первый коммит"

10. Проверка наличие ключей SSH
директория с SSH-ключами находится в домашней директории пользователя
Обычно SSH-ключи находятся в директории .ssh/

  cd ~               # Переход в домашнюю директорию:
  ls -la .ssh/       # Вывести список созданных ключей:
  ls -lAFho .ssh/    # Для более структурированного вывода вы можете добавить команде пару параметров:

Если папка пустая или её нет, то всё хорошо.
Если есть с похожим названием, SSH-ключи уже создавались:
•	id_dsa.pub
•	id_ecdsa.pub
•	id_ed25519.pub
•	id_rsa.pub
Если вы не создавали их, удалите все эти файлы.

11. Генерация ключа
Сгенерируйте в терминале приватный и публичный ключи.
У публичного расширение .pub, у приватного расширения нет.
Оба ключа сохранятся на вашем компьютере.
Публичный нужен для привязки к «Гиту».
В строке e-mail обязательно укажите адрес почты, которая привязана к «Гитхабу»:

  ssh-keygen -t ed25519 -C alex-dust@yandex.ru

Если у вас появилось сообщение об ошибке, скорее всего ваша система не поддерживает алгоритм шифрования ed25519.
Всё нормально, в таком случае достаточно воспользоваться другим алгоритмом:

  ssh-keygen -t rsa -b 4096 -C alex-dust@yandex.ru

Укажите место хранения ключей.
Простой вариант — сделать домашний каталог пользователя путём по умолчанию.
Для этого нажмите Enter:

  Enter file in which to save the key (C:\Users\Alex/.ssh/id_ed25519):

Создайте пароль доступа к SSH-ключу. Его нужно вводить при каждом соединении через протокол.
Но вы можете оставить поле пустым, чтобы никогда не вводить пароль. Для этого нажмите Enter:

  Enter passphrase (empty for no passphrase):
  Enter same passphrase again:

Запустите фоном команду ssh-agent (нужно вводить в самом Git Bash, а не VScode) Она ищет SSH-ключ на вашем компьютере:

  eval $(ssh-agent -s)

Привяжите приватный ключ к ssh-agent.
Тогда вы сможете не вводить пароль при каждой работе с репозиторием.
Обратите внимание, что к агенту нужно привязывать именно приватный ключ — это файл без расширения .pub:
Выбор команды зависит от алгоритма шифрования

  ssh-add ~/.ssh/id_ed25519    # для ed25519:
  ssh-add ~/.ssh/id_rsa        # для rsa:

Скопируйте публичный ключ в буфер обмена:
  C:\Users\Alex\.ssh\id_ed25519.pub

Переходим на github.com
https://github.com/settings/keys
